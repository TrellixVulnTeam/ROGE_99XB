/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   /home/sean/gem5-rtl/build/RISCV/SConscript:1034
 */

#include "pybind11/pybind11.h"
#include "pybind11/stl.h"

#include <type_traits>

#include "base/compiler.hh"
#include "params/SkewedAssociative.hh"
#include "python/pybind11/core.hh"
#include "sim/init.hh"
#include "sim/sim_object.hh"

#include "mem/cache/tags/indexing_policies/skewed_associative.hh"

namespace py = pybind11;

namespace gem5
{

static void
module_init(py::module_ &m_internal)
{
    py::module_ m = m_internal.def_submodule("param_SkewedAssociative");
    py::class_<SkewedAssociativeParams, BaseIndexingPolicyParams, std::unique_ptr<SkewedAssociativeParams, py::nodelete>>(m, "SkewedAssociativeParams")
        .def(py::init<>())
        .def("create", &SkewedAssociativeParams::create)
        ;

    py::class_<gem5::SkewedAssociative, gem5::BaseIndexingPolicy, std::unique_ptr<gem5::SkewedAssociative, py::nodelete>>(m, "gem5_COLONS_SkewedAssociative")
        ;

}

static EmbeddedPyBind embed_obj("SkewedAssociative", module_init, "BaseIndexingPolicy");

} // namespace gem5

namespace gem5
{

namespace
{

class DummySkewedAssociativeParamsClass
{
  public:
    gem5::SkewedAssociative *create() const;
};

template <class CxxClass, class Enable=void>
class DummySkewedAssociativeShunt;

template <class CxxClass>
class DummySkewedAssociativeShunt<CxxClass, std::enable_if_t<
    std::is_constructible<CxxClass,
        const SkewedAssociativeParams &>::value>>
{
  public:
    using Params = SkewedAssociativeParams;
    static gem5::SkewedAssociative *
    create(const Params &p)
    {
        return new CxxClass(p);
    }
};

template <class CxxClass>
class DummySkewedAssociativeShunt<CxxClass, std::enable_if_t<
    !std::is_constructible<CxxClass,
        const SkewedAssociativeParams &>::value>>
{
  public:
    using Params = DummySkewedAssociativeParamsClass;
    static gem5::SkewedAssociative *
    create(const Params &p)
    {
        return nullptr;
    }
};

} // anonymous namespace

GEM5_VAR_USED gem5::SkewedAssociative *
DummySkewedAssociativeShunt<gem5::SkewedAssociative>::Params::create() const
{
    return DummySkewedAssociativeShunt<gem5::SkewedAssociative>::
        create(*this);
}

} // namespace gem5
