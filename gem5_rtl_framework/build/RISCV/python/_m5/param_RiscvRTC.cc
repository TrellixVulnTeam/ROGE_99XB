/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   /home/sean/gem5-rtl/build/RISCV/SConscript:1034
 */

#include "pybind11/pybind11.h"
#include "pybind11/stl.h"

#include <type_traits>

#include "base/compiler.hh"
#include "params/RiscvRTC.hh"
#include "python/pybind11/core.hh"
#include "sim/init.hh"
#include "sim/sim_object.hh"

#include "dev/riscv/rtc.hh"

#include "base/types.hh"
#include <time.h>
namespace py = pybind11;

namespace gem5
{

static void
module_init(py::module_ &m_internal)
{
    py::module_ m = m_internal.def_submodule("param_RiscvRTC");
    py::class_<RiscvRTCParams, SimObjectParams, std::unique_ptr<RiscvRTCParams, py::nodelete>>(m, "RiscvRTCParams")
        .def(py::init<>())
        .def("create", &RiscvRTCParams::create)
        .def_readwrite("bcd", &RiscvRTCParams::bcd)
        .def_readwrite("frequency", &RiscvRTCParams::frequency)
        .def_readwrite("time", &RiscvRTCParams::time)
        .def_readwrite("port_int_pin_connection_count", &RiscvRTCParams::port_int_pin_connection_count)
        ;

    py::class_<gem5::RiscvRTC, gem5::SimObject, std::unique_ptr<gem5::RiscvRTC, py::nodelete>>(m, "gem5_COLONS_RiscvRTC")
        ;

}

static EmbeddedPyBind embed_obj("RiscvRTC", module_init, "SimObject");

} // namespace gem5

namespace gem5
{

namespace
{

class DummyRiscvRTCParamsClass
{
  public:
    gem5::RiscvRTC *create() const;
};

template <class CxxClass, class Enable=void>
class DummyRiscvRTCShunt;

template <class CxxClass>
class DummyRiscvRTCShunt<CxxClass, std::enable_if_t<
    std::is_constructible<CxxClass,
        const RiscvRTCParams &>::value>>
{
  public:
    using Params = RiscvRTCParams;
    static gem5::RiscvRTC *
    create(const Params &p)
    {
        return new CxxClass(p);
    }
};

template <class CxxClass>
class DummyRiscvRTCShunt<CxxClass, std::enable_if_t<
    !std::is_constructible<CxxClass,
        const RiscvRTCParams &>::value>>
{
  public:
    using Params = DummyRiscvRTCParamsClass;
    static gem5::RiscvRTC *
    create(const Params &p)
    {
        return nullptr;
    }
};

} // anonymous namespace

GEM5_VAR_USED gem5::RiscvRTC *
DummyRiscvRTCShunt<gem5::RiscvRTC>::Params::create() const
{
    return DummyRiscvRTCShunt<gem5::RiscvRTC>::
        create(*this);
}

} // namespace gem5
