/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   /home/sean/gem5-rtl/build/RISCV/SConscript:1034
 */

#include "pybind11/pybind11.h"
#include "pybind11/stl.h"

#include <type_traits>

#include "base/compiler.hh"
#include "params/Uart8250.hh"
#include "python/pybind11/core.hh"
#include "sim/init.hh"
#include "sim/sim_object.hh"

#include "dev/serial/uart8250.hh"

#include "base/types.hh"
namespace py = pybind11;

namespace gem5
{

static void
module_init(py::module_ &m_internal)
{
    py::module_ m = m_internal.def_submodule("param_Uart8250");
    py::class_<Uart8250Params, UartParams, std::unique_ptr<Uart8250Params, py::nodelete>>(m, "Uart8250Params")
        .def(py::init<>())
        .def("create", &Uart8250Params::create)
        .def_readwrite("pio_size", &Uart8250Params::pio_size)
        ;

    py::class_<gem5::Uart8250, gem5::Uart, std::unique_ptr<gem5::Uart8250, py::nodelete>>(m, "gem5_COLONS_Uart8250")
        ;

}

static EmbeddedPyBind embed_obj("Uart8250", module_init, "Uart");

} // namespace gem5

namespace gem5
{

namespace
{

class DummyUart8250ParamsClass
{
  public:
    gem5::Uart8250 *create() const;
};

template <class CxxClass, class Enable=void>
class DummyUart8250Shunt;

template <class CxxClass>
class DummyUart8250Shunt<CxxClass, std::enable_if_t<
    std::is_constructible<CxxClass,
        const Uart8250Params &>::value>>
{
  public:
    using Params = Uart8250Params;
    static gem5::Uart8250 *
    create(const Params &p)
    {
        return new CxxClass(p);
    }
};

template <class CxxClass>
class DummyUart8250Shunt<CxxClass, std::enable_if_t<
    !std::is_constructible<CxxClass,
        const Uart8250Params &>::value>>
{
  public:
    using Params = DummyUart8250ParamsClass;
    static gem5::Uart8250 *
    create(const Params &p)
    {
        return nullptr;
    }
};

} // anonymous namespace

GEM5_VAR_USED gem5::Uart8250 *
DummyUart8250Shunt<gem5::Uart8250>::Params::create() const
{
    return DummyUart8250Shunt<gem5::Uart8250>::
        create(*this);
}

} // namespace gem5
