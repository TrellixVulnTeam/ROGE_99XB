/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   /home/sean/gem5-rtl/build/RISCV/SConscript:1034
 */

#include "pybind11/pybind11.h"
#include "pybind11/stl.h"

#include <type_traits>

#include "base/compiler.hh"
#include "params/BranchPredictor.hh"
#include "python/pybind11/core.hh"
#include "sim/init.hh"
#include "sim/sim_object.hh"

#include "cpu/pred/bpred_unit.hh"

#include "base/types.hh"
#include "base/types.hh"
#include "base/types.hh"
#include "cpu/pred/indirect.hh"
#include "base/types.hh"
#include "base/types.hh"
namespace py = pybind11;

namespace gem5
{

static void
module_init(py::module_ &m_internal)
{
    py::module_ m = m_internal.def_submodule("param_BranchPredictor");
    py::class_<BranchPredictorParams, SimObjectParams, std::unique_ptr<BranchPredictorParams, py::nodelete>>(m, "BranchPredictorParams")
        .def_readwrite("BTBEntries", &BranchPredictorParams::BTBEntries)
        .def_readwrite("BTBTagSize", &BranchPredictorParams::BTBTagSize)
        .def_readwrite("RASSize", &BranchPredictorParams::RASSize)
        .def_readwrite("indirectBranchPred", &BranchPredictorParams::indirectBranchPred)
        .def_readwrite("instShiftAmt", &BranchPredictorParams::instShiftAmt)
        .def_readwrite("numThreads", &BranchPredictorParams::numThreads)
        ;

    py::class_<gem5::branch_prediction::BPredUnit, gem5::SimObject, std::unique_ptr<gem5::branch_prediction::BPredUnit, py::nodelete>>(m, "gem5_COLONS_branch_prediction_COLONS_BPredUnit")
        ;

}

static EmbeddedPyBind embed_obj("BranchPredictor", module_init, "SimObject");

} // namespace gem5
